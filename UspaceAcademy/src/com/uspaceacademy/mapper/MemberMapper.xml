<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper"><!-- 이름은 각자 맞게 바꾸면됨 -->
   <sql id="column-basic-student">
   student_id , student_password, student_name ,student_email,
   student_phone_no,student_address 
   </sql>
   
   <sql id="column-basic-teacher">
   teacher_id , teacher_password, teacher_name ,teacher_email,
   teacher_phone_no,teacher_address , teacher_subject, teacher_salary
   </sql>
   
   <sql id="column-basic-teacher-lecture">
   t.teacher_password, t.teacher_name , t.teacher_email, t.teacher_phone_no, t.teacher_address, t.teacher_subject, t.teacher_salary,
   l.lecture_no, l.lecture_title, l.lecture_description, l.lecture_start_time, l.lecture_end_time, l.lecture_day, l.lecture_start_date,
   l.lecture_end_date, l.lecture_price, l.lecture_total_student, l.lecture_current_student, l.lecture_subject
   </sql>
   
   <resultMap type="Student" id="student-basic">
       <id column="student_id" property="studentId"/>
      <result column="student_password" property="studentPassword"/>
      <result column="student_name" property="studentName"/>
      <result column="student_email" property="studentEmail"/>
      <result column="student_phone_no" property="studentPhoneNo"/>
      <result column="student_address" property="studentAddress"/>
    </resultMap>
    
    
   <resultMap type="Teacher" id="teacher-basic">
       <id column="teacher_id" property="teacherId"/>
      <result column="teacher_password" property="teacherPassword"/>
      <result column="teacher_name" property="teacherName"/>
      <result column="teacher_email" property="teacherEmail"/>
      <result column="teacher_phone_no" property="teacherPhoneNo"/>
      <result column="teacher_address" property="teacherAddress"/>
      <result column="teacher_subject" property="teacherSubject"/>
      <result column="teacher_salary" property="teacherSalary"/>
    </resultMap>
    
    <resultMap type="Lecture" id="lecture-basic">
 		<id column="lecture_no" property="lectureNo"/>
		<result column="lecture_title" property="lectureTitle"/>
		<result column="lecture_description" property="lectureDescription"/>
		<result column="lecture_start_time" property="lectureStartTime"/>
		<result column="lecture_end_time" property="lectureEndTime"/>
		<result column="lecture_day" property="lectureDay"/>
		<result column="lecture_start_date" property="lectureStartDate"/>
		<result column="lecture_end_date" property="lectureEndDate"/>
		<result column="lecture_price" property="lecturePrice"/>
		<result column="lecture_total_student" property="lectureTotalStudent"/>
		<result column="lecture_current_student" property="lectureCurrentStudent"/>
		<result column="lecture_subject" property="lectureSubject"/>
		<result column="teacher_id2" property="teacherId2"/>
 	</resultMap>
    
   	<resultMap type="teacher" id="teacher-lecture-resultmap" extends="teacher-basic">
		<collection property="lectureList" ofType="lecture" resultMap="lecture-basic"/><!-- bookMapper의 resultMap 참조 -->
	</resultMap>
    
<!--    <select id="selectSalaryList" resultMap="teacher-lecture-resultmap">
      SELECT <include refid="column-basic-teacher-lecture"/>
      FROM teacher t, lecture l
      where t.teacher_id = l.teacher_id2
   </select> -->
   
   <select id="selectSalaryList" resultMap="teacher-basic">
      SELECT <include refid="column-basic-teacher"/>
      FROM teacher
   </select>
    
   <select id="selectSalaryByTeacherId" resultMap="teacher-basic" parameterType="String">
      SELECT <include refid="column-basic-teacher"/>
      FROM teacher
      WHERE teacher_id = #{teacherId}   
   </select>
   
   <insert id="insertSalary" parameterType="teacher">
      INSERT INTO teacher
      VALUES
      (#{teacherId},#{teacherPassword},#{teacherName},#{teacherEmail},#{teacherPhoneNo},#{teacherAddress},#{teacherSubject},#{teacherSalary})
   </insert>
   
<!--    <update id="updateSalary" parameterType="teacher">
   	update teacher
   	set teacher_password = #{teacherPassword},
	   	teacher_name = #{teacherName},
	   	teacher_email = #{teacherEmail},
	   	teacher_phoneNo = #{teacherPhoneNo},
	   	teacher_address = #{teacherAddress},
	   	teacher_subject = #{teacherSubject},
	   	teacher_salary = #{teacherSalary}
   	where teacher_id = #{teacherId}
   </update> -->
   
   <update id="updateSalary" parameterType="teacher">
   	update teacher
   	set teacher_salary = #{teacherSalary}
   	where teacher_id = #{teacherId}
   </update>
   
   
   
    
   <select id="selectStudentByID" resultMap="student-basic" parameterType="String">
      SELECT <include refid="column-basic-student"/>
      FROM student
      WHERE student_id = #{value}
   
   </select>
   
   <select id="findStudentId" resultMap="student-basic" parameterType="student">
      SELECT <include refid="column-basic-student"/>
      FROM student
      WHERE student_name = #{studentName} and student_phone_no= #{studentPhoneNo}
   </select>
   
   <select id="findStudentPassword" resultMap="student-basic" parameterType="student">
      SELECT <include refid="column-basic-student"/>
      FROM student
      WHERE student_id = #{studentId} and student_email=#{studentEmail} 
   </select>
   
   <select id="selectTeacherByID" resultMap="teacher-basic" parameterType="String">
      SELECT <include refid="column-basic-teacher"/>
      FROM teacher
      WHERE teacher_id = #{value}
   </select>
   
     
   <select id="findTeacherId" resultMap="teacher-basic" parameterType="teacher">
      SELECT <include refid="column-basic-teacher"/>
      FROM teacher
      WHERE teacher_name = #{teacherName} and teacher_phone_no=#{teacherPhoneNo}
   </select>
   
   <select id="findTeacherPassword" resultMap="teacher-basic" parameterType="teacher">
      SELECT <include refid="column-basic-teacher"/>
      FROM teacher
      WHERE teacher_id = #{teacherId} and teacher_email=#{teacherEmail} 
   </select>
   
   <insert id="insertStudent" parameterType="student">
      INSERT INTO student
      VALUES
      (#{studentId},#{studentPassword},#{studentName},#{studentEmail},#{studentPhoneNo},#{studentAddress})
   </insert>
   <insert id="insertTeacher" parameterType="teacher">
      INSERT INTO teacher
      VALUES
      (#{teacherId},#{teacherPassword},#{teacherName},#{teacherEmail},#{teacherPhoneNo},#{teacherAddress},#{teacherSubject},#{teacherSalary})
   </insert>
   
   <select id="selectAllTeacher" resultMap="teacher-basic">
   	SELECT <include refid="column-basic-teacher"/>
   	FROM teacher
   </select>
   <!-- 과목으로 강사 목록 조회해옴 -->
   <select id="selectTeacherBySubject" parameterType="string" resultMap="teacher-basic">
   	SELECT <include refid="column-basic-teacher"/>
   	FROM  teacher
   	WHERE teacher_subject = #{value}
   </select>
   
    <!-- 이름으로 강사 목록 조회해옴 -->
   <select id="selectTeacherListByTeacherName" parameterType="string" resultMap="teacher-basic">
   	SELECT <include refid="column-basic-teacher"/>
   	FROM   teacher
    WHERE  teacher_name like '%'||#{teacherName}||'%'
   </select>
   
   <!-- 강사 개인정보 수정 -->
   <update id="update_teacher" parameterType="teacher">
   	update teacher
   	set teacher_password = #{teacherPassword},
   		teacher_name = #{teacherName},
   		teacher_email = #{teacherEmail},
   		teacher_phone_no = #{teacherPhoneNo},
   		teacher_address = #{teacherAddress},
   		teacher_subject = #{teacherSubject}
   	where teacher_id = #{teacherId}
   </update>
   
<!--     강사 회원 탈퇴 
   <delete id="delete_teacher" parameterType="string">
   		delete from TEACHER 
   		where teacher_id = #{teacherId} 
   </delete> -->
  
  <update id="update_student" parameterType="student">
  	update student
  	set student_password = #{studentPassword},
  	    student_name = #{studentName},
  	    student_email = #{studentEmail},
  	    student_phone_no = #{studentPhoneNo},
  	    student_address = #{studentAddress}
  	where student_id = #{studentId}
  </update>
  
  <!-- 학생 회원 탈퇴 -->
  <delete id="deleteStudent" parameterType="string">
  	delete from student where student_id = #{value}
  </delete>
  
  <!-- 강사 탈퇴 -->
  <delete id="deleteTeacher" parameterType="string">
  	delete from teacher where teacher_id = #{value}
  </delete>
  
  <!-- 모든 학생 조회 -->
  <select id="studentAll" parameterType="map" resultMap="student-basic">
  	select <include refid="column-basic-student"/> 
  	from (select ceil(rownum/#{itemsPerPage}) page,
  		<include refid="column-basic-student"/>
  		from (select
		<include refid="column-basic-student"/>
		from student order by student_name
  		) )
  	where page = #{page}
  </select>
  
  <select id="selectStudent" resultType="_int">
  select count(student_id)
  from student
  </select>
  
   <!-- 모든 강사 조회 -->
  <select id="teacherAll" parameterType="map" resultMap="teacher-basic">
  	select <include refid="column-basic-teacher"/> 
  	from (select ceil(rownum/#{itemsPerPage}) page,
  		<include refid="column-basic-teacher"/>
  		from (select
		<include refid="column-basic-teacher"/>
		from teacher order by teacher_name
  		) )
  	where page = #{page}
  </select>
  
  <select id="selectTeacher" resultType="_int">
  select count(teacher_id)
  from teacher
  </select>

 <!-- 학생이름으로 검색 -->
 <select id="searchStudentByName" resultMap="student-basic" parameterType="map">
 	SELECT <include refid="column-basic-student"/> 
 	FROM (SELECT ceil(rownum/#{itemsPerPage}) page,
 	<include refid="column-basic-student"/> 
 	FROM (SELECT
 	<include refid="column-basic-student"/> 
 	FROM student WHERE student_name like '%'||#{name}||'%' 
 	ORDER BY student_name))
 	WHERE page= #{page}
 </select>

 <select id="selectStudentByNameCountContents" resultType="_int" parameterType="string">
 	select count(student_id)
 	from student
 	where student_name like '%'||#{name}||'%' 
 </select>
 
 <!-- 강사 이름으로 검색 -->
  <select id="searchTeacherByName" resultMap="teacher-basic" parameterType="map">
 	SELECT <include refid="column-basic-teacher"/> 
 	FROM (SELECT ceil(rownum/#{itemsPerPage}) page,
 	<include refid="column-basic-teacher"/> 
 	FROM (SELECT
 	<include refid="column-basic-teacher"/> 
 	FROM teacher WHERE teacher_name like '%'||#{name}||'%' 
 	ORDER BY teacher_name))
 	WHERE page= #{page}
 </select>
 
  <select id="selectTeacherByNameCountContents" resultType="_int" parameterType="string">
 	select count(teacher_id)
 	from teacher
 	where teacher_name like '%'||#{name}||'%' 
 </select>
 

 
</mapper>